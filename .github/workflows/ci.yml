name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Lint with flake8
      run: |
        flake8 src tests --max-line-length=100 --extend-ignore=E203

    - name: Type check with mypy
      run: |
        mypy src --ignore-missing-imports

    - name: Test with pytest
      run: |
        pytest tests -v --cov=src --cov-report=xml

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t mesh-ai-network:${{ github.sha }} .

    - name: Run Docker container
      run: |
        docker run -d --name mesh-test mesh-ai-network:${{ github.sha }}
        sleep 10
        docker logs mesh-test

    - name: Health check
      run: |
        docker exec mesh-test curl -f http://localhost:8080/api/v1/status
